// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAppPortalApi.Database;


#nullable disable

namespace WebAppPortalSite.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20250817113923_initial-create")]
    partial class initialcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAppPortalApi.Data.Database.Tables.dbo.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("varchar(254)");

                    b.Property<string>("FirstNames")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<DateTime?>("LastSignIn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("RegistrationStatus")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebAppPortalApi.Data.Database.Tables.log.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Exception")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("LogLevel")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<string>("StackTrace")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Events", "log");
                });

            modelBuilder.Entity("WebAppPortalApi.Data.Database.Tables.log.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Archived")
                        .HasColumnType("int");

                    b.Property<string>("HttpMethod")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<string>("HttpStatusCode")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<string>("RequestBody")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestHeaders")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ResponseBody")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("ResponseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResponseHeaders")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<TimeSpan?>("TimeTaken")
                        .HasColumnType("time");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("varchar(2048)");

                    b.HasKey("Id");

                    b.ToTable("Requests", "log");
                });
#pragma warning restore 612, 618
        }
    }
}
